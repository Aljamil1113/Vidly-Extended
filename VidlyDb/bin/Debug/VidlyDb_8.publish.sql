/*
Deployment script for aspnet-Vidly-20210105123253

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "aspnet-Vidly-20210105123253"
:setvar DefaultFilePrefix "aspnet-Vidly-20210105123253"
:setvar DefaultDataPath "C:\Users\Al Jamil\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Al Jamil\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'The following operation was generated from a refactoring log file 157bbbe2-f84c-4334-9cb9-69a0657aaa28';

PRINT N'Rename [dbo].[viewMovieGenre] to MovieGenre';


GO
EXECUTE sp_rename @objname = N'[dbo].[viewMovieGenre]', @newname = N'MovieGenre', @objtype = N'OBJECT';


GO
PRINT N'Altering [dbo].[MovieGenre]...';


GO
ALTER VIEW [dbo].[MovieGenre]
	AS select [dbo].[Movies].[MovieId], [dbo].[Movies].[Name], [dbo].[Movies].[ReleaseDate], 
	[dbo].[Movies].[DateAdded], [dbo].[Movies].[NumberInStock], 
	[dbo].[Movies].[GenreId], [dbo].[Movies].[NumberAvailable], [dbo].[Movies].[Amount], 
	[dbo].[Genres].[Name] as GenreName from Movies inner join Genres
	on Movies.GenreId = Genres.GenreId Where [dbo].[Movies].[NumberAvailable] > 0
GO
PRINT N'Creating [dbo].[CustomerMembershipType]...';


GO
CREATE VIEW [dbo].[CustomerMembershipType]
	AS SELECT [dbo].[Customers].[CustomerId], [dbo].[Customers].[Name], [dbo].[Customers].[IsSubscribedToNewsLetter], 
	[dbo].[Customers].[MembershipTypeId], [dbo].[Customers].[BirthDate], [dbo].[Customers].[IsDelinquent], [dbo].[Customers].[RentLimit], 
	[dbo].[Customers].[DiscountRate], [dbo].[MembershipTypes].[SignUpFree], 
	[dbo].[MembershipTypes].[DurationInMonths], [dbo].[MembershipTypes].[Name] as MembershipTypeName 
	FROM [dbo].[Customers] inner join [dbo].[MembershipTypes] 
	on [dbo].[Customers].[MembershipTypeId] = [dbo].[MembershipTypes].[MembershipTypeId]
GO
PRINT N'Creating [dbo].[RentalCustomer]...';


GO
CREATE VIEW [dbo].[RentalCustomer]
	AS SELECT [dbo].[Rentals].[RentalId], [dbo].[Rentals].[DateRented], [dbo].[Rentals].[Customer_Id], [dbo].[Rentals].[Price], 
	[dbo].[Customers].[CustomerId], [dbo].[Customers].[Name], [dbo].[Customers].[IsSubscribedToNewsLetter], 
	[dbo].[Customers].[MembershipTypeId], [dbo].[Customers].[BirthDate], [dbo].[Customers].[IsDelinquent], [dbo].[Customers].[RentLimit], 
	[dbo].[Customers].[DiscountRate] FROM [dbo].[Rentals] inner join [dbo].[Customers]
	ON [dbo].[Rentals].[Customer_Id] = [dbo].[Customers].[CustomerId]
GO
PRINT N'Altering [dbo].[spShowMovies]...';


GO
ALTER PROCEDURE [dbo].[spShowMovies]
AS
	select [MovieId], [Name], [ReleaseDate], [DateAdded], [NumberInStock], [GenreId], 
	[NumberAvailable], [Amount], [GenreName] from [dbo].[MovieGenre]
RETURN 0
GO
PRINT N'Creating [dbo].[spShowCustomers]...';


GO
CREATE PROCEDURE [dbo].[spShowCustomers]
AS
	SELECT [CustomerId], [Name], [IsSubscribedToNewsLetter], [MembershipTypeId], [BirthDate], [IsDelinquent], [RentLimit], 
	[DiscountRate], [SignUpFree], [DurationInMonths], [MembershipTypeName] from [dbo].[CustomerMembershipType] 
RETURN 0
GO
PRINT N'Creating [dbo].[spShowCustomersWithName]...';


GO
CREATE PROCEDURE [dbo].[spShowCustomersWithName]
	@name nvarchar(50)
AS
	SELECT [CustomerId], [Name], [IsSubscribedToNewsLetter], [MembershipTypeId], [BirthDate], [IsDelinquent], [RentLimit], 
	[DiscountRate], [SignUpFree], [DurationInMonths], [MembershipTypeName] from [dbo].[CustomerMembershipType] 
	where [dbo].[CustomerMembershipType].[Name] = @name
RETURN 0
GO
PRINT N'Creating [dbo].[spShowMoviesWithName]...';


GO
CREATE PROCEDURE [dbo].[spShowMoviesWithName]
	@name nvarchar(50)
AS
	SELECT [MovieId], [Name], [ReleaseDate], [DateAdded], [NumberInStock], [GenreId], 
	[NumberAvailable], [Amount], [GenreName] from [dbo].[MovieGenre] 
	WHERE [dbo].[MovieGenre].[Name] = @name

RETURN 0
GO
PRINT N'Creating [dbo].[spShowRentals]...';


GO
CREATE PROCEDURE [dbo].[spShowRentals]
AS
	SELECT * from [dbo].[RentalCustomer]
RETURN 0
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '157bbbe2-f84c-4334-9cb9-69a0657aaa28')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('157bbbe2-f84c-4334-9cb9-69a0657aaa28')

GO

GO
PRINT N'Update complete.';


GO
